import ca.derekellis.kgtfs.domain.model.StopId;
import ca.derekellis.kgtfs.domain.model.TripId;
import kotlin.Int;

CREATE TABLE StopTime (
    trip_id TEXT AS TripId NOT NULL,
    arrival_time TEXT NOT NULL,
    departure_time TEXT NOT NULL,
    stop_id TEXT AS StopId NOT NULL,
    stop_sequence INTEGER AS Int NOT NULL,
    pickup_type INTEGER AS Int,
    drop_off_type INTEGER AS Int
);

CREATE INDEX idx_stop_time ON StopTime(trip_id, stop_sequence);

insert:
INSERT INTO StopTime VALUES (?, ?, ?, ?, ?, ?, ?);

getAll:
SELECT * FROM StopTime;

getByTripId:
SELECT * FROM StopTime
WHERE trip_id = ?
ORDER BY stop_sequence;

getByTripIdAtStop:
SELECT * FROM StopTime
WHERE trip_id = ? AND stop_id = ?;

getRange:
SELECT * FROM StopTime WHERE arrival_time >= ? AND arrival_time <= ?;

getStopTimesByShapeId:
SELECT * FROM StopTime
JOIN Stop ON Stop.stop_id = StopTime.stop_id
WHERE trip_id = (
    SELECT trip_id FROM Trip
    WHERE shape_id = ?
)
ORDER BY stop_sequence ASC;

getByServiceId:
SELECT * FROM StopTime
WHERE trip_id IN (
    SELECT trip_id FROM Trip
    WHERE service_id IN ?
);